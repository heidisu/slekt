---
import type { ReferenceContentEntry } from "astro:content";
import type { Hendelse, Person } from "../types";
import { formatDate, getPersonDisplayName, upperFirstChar } from "../utils";
import LinkExternal from "./LinkExternal.astro";
import { getEntry } from "astro:content";
import MarriedTo from "./MarriedTo.astro";
export interface Props {
  personId: string,
  hendelser: Array<Hendelse>;
}

const { hendelser = [], personId} = Astro.props as Props;

---

{
  hendelser && hendelser.length && (
    <div class="pt-10">
      {hendelser.map((hendelse, index = 0) => (
        <div class='flex'>
          <div class="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
            <div>
              <div class="flex items-center justify-center">
                  <div class='w-5 h-5 p-1 rounded-full border-2 border-primary'/>
              </div>
            </div>
            {index !== hendelser.length - 1 && <div class="w-px h-full bg-primary/50 dark:bg-slate-400/50" />}
          </div>
          <div class={`-mt-1 ${index !== hendelser.length - 1 ? 'pb-10' : ''}`}>
            <p class='font-semibold'>{upperFirstChar(hendelse.type)}</p>
            <p>{formatDate(hendelse.dato)}</p>
            <p>{hendelse.sted}</p>
            {hendelse.type === 'vielse' && <MarriedTo hendelse={hendelse} personId={personId}/>}
            {hendelse.kilde && <p><LinkExternal href={hendelse.kilde.url}>{hendelse.kilde.tittel}</LinkExternal></p>}
          </div>
        </div>
      ))}
    </div>
  )
}